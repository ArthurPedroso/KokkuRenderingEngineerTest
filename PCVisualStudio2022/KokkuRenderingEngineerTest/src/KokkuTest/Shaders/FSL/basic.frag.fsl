/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/
#include "resources.h.fsl"

RES(Tex2D(float4), Albedo,  UPDATE_FREQ_NONE, t7, binding = 8);
RES(Buffer(uint), submeshSizes, UPDATE_FREQ_NONE, t8, binding = 9);
RES(SamplerState,  uSampler1, UPDATE_FREQ_NONE, s1, binding = 10);
// Shader for simple shading with a point light
// for planets in Unit Test 12 - Transformations

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
	DATA(float3, Normal,    NORMAL);
	DATA(float2, uv,	 TEXCOORD0);
};

float4 PS_MAIN(VSOutput In, SV_PrimitiveID(uint) primitiveID)
{
    INIT_MAIN;

    float4 result;
    //In.Color = float4(1.0f, 1.0f, 1.0f, 1.0f);
    result = float4(1.0, 0.0, 0.0, 1.0);//float4(result.xyz, 1.0f);

    if(primitiveID <= Get(submeshSizes)[0])
    {
        result = SampleTex2D(Get(Albedo), Get(uSampler1), In.uv);        
    }

    RETURN(result);
}
