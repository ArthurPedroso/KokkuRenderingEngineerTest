/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "resources.h.fsl"
#include "../../../../../../The-Forge/Common_3/Graphics/ShaderUtilities.h.fsl"

STRUCT(VSInput)
{
	DATA(float3, Position1, POSITION);
	DATA(uint2, Normal, NORMAL);
	DATA(float2, TexCoord,  TEXCOORD0);
};

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
	DATA(float3, Normal,    NORMAL);
	DATA(float2, uv,	 TEXCOORD0);
};

VSOutput VS_MAIN( VSInput In, SV_InstanceID(uint) InstanceID )
{
    INIT_MAIN;
    VSOutput Out;

    float4x4 tempMat = mul(Get(mvp), Get(toWorld));
    Out.Position = mul(tempMat, float4(In.Position1, 1.0f));
	Out.Normal = float4(decodeDir(In.Normal), 0.0f).rgb;
	Out.uv = In.TexCoord;
    RETURN(Out);
}
